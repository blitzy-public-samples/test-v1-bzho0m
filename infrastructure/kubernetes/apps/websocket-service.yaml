# WebSocket Service Kubernetes Configuration
# Version: 1.0.0
# Purpose: Manages real-time communication for hotel operations including room status,
# guest notifications, and service requests
# Dependencies: 
# - Redis 7.0+ for pub/sub messaging
# - Node.js 18-alpine base image
# - TLS certificates for secure WebSocket connections

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: websocket-service
  namespace: hotel-management
  labels:
    app: websocket-service
    component: real-time
    tier: backend
    version: "1.0.0"
  annotations:
    description: "WebSocket service for real-time hotel management communications"
    prometheus.io/scrape: "true"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: websocket-service
  template:
    metadata:
      labels:
        app: websocket-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: websocket-service
        image: node:18-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
          name: ws
          protocol: TCP
        - containerPort: 3002
          name: metrics
          protocol: TCP
        env:
        - name: WS_PORT
          value: "3001"
        - name: WS_PATH
          value: "/ws"
        - name: METRICS_PORT
          value: "3002"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: redis-host
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: password
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: log-level
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: tls-certs
          mountPath: /etc/tls
          readOnly: true
      volumes:
      - name: tls-certs
        secret:
          secretName: tls-certificate

---
apiVersion: v1
kind: Service
metadata:
  name: websocket-service
  namespace: hotel-management
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:region:account:certificate/certificate-id"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
spec:
  selector:
    app: websocket-service
  ports:
  - protocol: TCP
    port: 443
    targetPort: 3001
    name: wss
  - protocol: TCP
    port: 3002
    targetPort: 3002
    name: metrics
  type: LoadBalancer

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: websocket-service-hpa
  namespace: hotel-management
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: websocket-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Pods
        value: 2
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 120