# Kubernetes Deployment Manifest for Hotel Management ERP Billing Service
# Version: 1.0.0
# Purpose: Manages the deployment configuration for the billing microservice
# Dependencies: namespace.yaml, configmap.yaml, secrets.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: billing-service
  namespace: hotel-erp-${ENV}
  labels:
    app: hotel-erp
    service: billing
    environment: ${ENV}
    component: backend
    tier: api
    version: 1.0.0
  annotations:
    description: "Billing service for payment processing and financial transactions"
    security.compliance/pci-dss: "enabled"
    prometheus.io/scrape: "true"
spec:
  # High availability with 3 replicas as per requirements
  replicas: 3
  
  # Rolling update strategy for zero-downtime deployments
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  
  selector:
    matchLabels:
      app: hotel-erp
      service: billing
  
  template:
    metadata:
      labels:
        app: hotel-erp
        service: billing
        component: backend
        tier: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    
    spec:
      # Security context for non-root execution
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      
      containers:
      - name: billing-service
        image: hotel-erp/billing-service:${VERSION}
        imagePullPolicy: Always
        
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: metrics
          containerPort: 3000
          protocol: TCP
        
        # Resource limits as per technical specifications
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        
        # Environment configuration from ConfigMap and Secrets
        envFrom:
        - configMapRef:
            name: hotel-erp-config
        - secretRef:
            name: database-credentials
        - secretRef:
            name: stripe-credentials
        
        # Health checks for container lifecycle management
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
      
      # Pod distribution strategy for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: service
                  operator: In
                  values:
                  - billing
              topologyKey: kubernetes.io/hostname

---
# Horizontal Pod Autoscaling configuration
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: billing-service-hpa
  namespace: hotel-erp-${ENV}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: billing-service
  minReplicas: 3
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70