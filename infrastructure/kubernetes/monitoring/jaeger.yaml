# Jaeger Distributed Tracing System Configuration
# Version: 1.0.0
# Purpose: Production-grade Jaeger deployment for Hotel Management ERP
# Dependencies: namespace.yaml, configmap.yaml

---
# Service Account with enhanced security
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jaeger
  namespace: monitoring
  labels:
    app: jaeger
    component: tracing
    part-of: hotel-erp
  annotations:
    security.beta.kubernetes.io/pod-security-admission: restricted

---
# RBAC Role for Jaeger
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jaeger-role
  namespace: monitoring
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]

---
# RBAC Role Binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jaeger-role-binding
  namespace: monitoring
subjects:
- kind: ServiceAccount
  name: jaeger
  namespace: monitoring
roleRef:
  kind: Role
  name: jaeger-role
  apiGroup: rbac.authorization.k8s.io

---
# Jaeger Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: jaeger-config
  namespace: monitoring
  labels:
    app: jaeger
    component: tracing
data:
  collector.yaml: |
    collector:
      zipkin:
        host-port: 9411
      otlp:
        enabled: true
        grpc-port: 4317
        http-port: 4318
      queue:
        num-workers: 50
        queue-size: 2000
    sampling:
      default:
        type: probabilistic
        param: 1.0
      per_operation:
        hotel-erp.health:
          type: probabilistic
          param: 0.1
    storage:
      type: elasticsearch
      options:
        es:
          server-urls: http://elasticsearch:9200
          index-prefix: hotel-erp
          username: ${ES_USERNAME}
          password: ${ES_PASSWORD}
          tls:
            enabled: true
            skip-host-verify: false
        retention:
          schedule: "0 0 * * *"
          days: 30

---
# Jaeger Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: monitoring
  labels:
    app: jaeger
    component: tracing
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
        component: tracing
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "16686"
    spec:
      serviceAccountName: jaeger
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:1.45
        imagePullPolicy: IfNotPresent
        ports:
        - name: query
          containerPort: 16686
          protocol: TCP
        - name: collector
          containerPort: 14268
          protocol: TCP
        - name: agent
          containerPort: 6831
          protocol: UDP
        - name: zipkin
          containerPort: 9411
          protocol: TCP
        - name: otlp-grpc
          containerPort: 4317
          protocol: TCP
        - name: otlp-http
          containerPort: 4318
          protocol: TCP
        env:
        - name: SPAN_STORAGE_TYPE
          value: "elasticsearch"
        - name: ES_USERNAME
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: username
        - name: ES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: password
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2000m"
            memory: "4Gi"
        volumeMounts:
        - name: config
          mountPath: /etc/jaeger
          readOnly: true
        readinessProbe:
          httpGet:
            path: /
            port: 16686
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 16686
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: config
        configMap:
          name: jaeger-config

---
# Jaeger Service
apiVersion: v1
kind: Service
metadata:
  name: jaeger
  namespace: monitoring
  labels:
    app: jaeger
    component: tracing
spec:
  type: ClusterIP
  ports:
  - name: query
    port: 16686
    targetPort: query
  - name: collector
    port: 14268
    targetPort: collector
  - name: agent
    port: 6831
    protocol: UDP
    targetPort: agent
  - name: zipkin
    port: 9411
    targetPort: zipkin
  - name: otlp-grpc
    port: 4317
    targetPort: otlp-grpc
  - name: otlp-http
    port: 4318
    targetPort: otlp-http
  selector:
    app: jaeger

---
# Network Policy for Jaeger
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: jaeger-network-policy
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      app: jaeger
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          app: hotel-erp
    ports:
    - protocol: TCP
      port: 16686
    - protocol: TCP
      port: 14268
    - protocol: UDP
      port: 6831
    - protocol: TCP
      port: 9411
    - protocol: TCP
      port: 4317
    - protocol: TCP
      port: 4318
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          app: hotel-erp
    ports:
    - protocol: TCP
      port: 9200 # Elasticsearch